openapi: 3.0.0
info:
  title: Swagger Insurance Org
  description: A sample API that uses a Insurance Org as an example to demonstrate
    features in the swagger-2.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
  license:
    name: MIT
  version: 1.0.0
servers:
- url: https://stoplight.io/mocks/testaccioynt/houndapi/113758630
paths:
  /premiums:
    get:
      description: Returns all premiums from the system that the user has access to
      operationId: findPremiums
      parameters:
      - name: tags
        in: query
        description: tags to filter by
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: maximum number of results to return
        schema:
          type: integer
          format: int32
      responses:
        200:
          description: premium response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Premium'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Premium'
            text/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Premium'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Premium'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/html:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    post:
      description: Creates a new premium in the store.  Duplicates are allowed
      operationId: addPremium
      requestBody:
        description: Premium to add to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPremium'
        required: true
      responses:
        200:
          description: premium response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Premium'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
      x-codegen-request-body-name: premium
  /premiums/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have
        access to the premium
      operationId: findPremiumById
      parameters:
      - name: id
        in: path
        description: ID of premium to fetch
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: premium response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Premium'
            application/xml:
              schema:
                $ref: '#/components/schemas/Premium'
            text/xml:
              schema:
                $ref: '#/components/schemas/Premium'
            text/html:
              schema:
                $ref: '#/components/schemas/Premium'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            application/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/xml:
              schema:
                $ref: '#/components/schemas/ErrorModel'
            text/html:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    delete:
      tags:
      - Provider
      description: deletes a single premium based on the ID supplied
      operationId: deletePremium
      parameters:
      - name: id
        in: path
        description: ID of premium to delete
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: premium deleted
          content: {}
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
components:
  schemas:
    Premium:
      allOf:
      - $ref: '#/components/schemas/NewPremium'
      - required:
        - id
        type: object
        properties:
          id:
            type: integer
            format: int64
    NewPremium:
      type: object
      properties:
        firstname:
          type: string
          description: name of the user
        lastname:
          type: string
        dateofbirth:
          type: string
        tag:
          type: string
    ErrorModel:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
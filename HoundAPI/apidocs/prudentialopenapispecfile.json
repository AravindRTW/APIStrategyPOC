{
  "openapi": "3.0.0",
  "info": {
    "title": "Swagger Insurance Org",
    "description": "A sample1 API that uses a Insurance Org as an example to demonstrate features in the swagger-2.0 specification",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Swagger API Team"
    },
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://stoplight.io/mocks/testaccioynt/houndapi/113758630/",
      "description": "Mock Server"
    },
    {
      "url": "liveserver.io",
      "description": "Live Server"
    }
  ],
  "paths": {
    "/premiums": {
      "get": {
        "description": "Returns all premiums from the system that the user has access to. New Updated Version from Studio. Pre-Showcase prep",
        "operationId": "findPremiums",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "tags to filter by",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "premium response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Premium"
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": [
                      {
                        "firstname": "MockAravind",
                        "lastname": "MockRajendran",
                        "dateofbirth": "19840101",
                        "tag": "Mocktag",
                        "id": 1
                      }
                    ]
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Premium"
                  }
                }
              },
              "text/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Premium"
                  }
                }
              },
              "text/html": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Premium"
                  }
                }
              },
              "MockData": {
                "example": [
                  {
                    "name": "MockData",
                    "firstname": "MFName",
                    "lastname": "MLName",
                    "dateofbirth": "07071998",
                    "tag": "TaggerMock",
                    "id": 1
                  }
                ]
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Creates a new premium in the store.  Duplicates are allowed",
        "operationId": "addPremium",
        "requestBody": {
          "description": "Premium to add to the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPremium"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "premium response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Premium"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "premium"
      },
      "parameters": []
    },
    "/premiums/{id}": {
      "get": {
        "description": "Returns a user based on a single ID, if the user does not have access to the premium. Final Showcase Demo",
        "operationId": "findPremiumById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of premium to fetch",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "premium response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Premium"
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "firstname": "string",
                      "lastname": "string",
                      "dateofbirth": "string",
                      "tag": "string",
                      "id": 0
                    }
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Premium"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Premium"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/Premium"
                }
              },
              "MData": {
                "example": {
                  "name": "MockData",
                  "firstname": "Mdata",
                  "lastname": "Mdata",
                  "dateofbirth": "Mdata",
                  "tag": "Mdata",
                  "id": 2
                }
              },
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              },
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Provider"
        ],
        "description": "deletes a single premium based on the ID supplied",
        "operationId": "deletePremium",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of premium to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "premium deleted",
            "content": {}
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorModel"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Premium": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewPremium"
          },
          {
            "required": [
              "id"
            ],
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "NewPremium": {
        "type": "object",
        "properties": {
          "firstname": {
            "type": "string",
            "description": "name of the user"
          },
          "lastname": {
            "type": "string"
          },
          "dateofbirth": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          }
        },
        "x-examples": {
          "1": {
            "firstname": "Mdata",
            "lastname": "LName",
            "dateofbirth": "09081982",
            "tag": "mockdata"
          }
        }
      },
      "ErrorModel": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        },
        "x-examples": {
          "1": {
            "code": -2147483648,
            "message": "string"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Custom code",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ErrorModel"
            },
            "examples": {
              "Example 1": {
                "value": {
                  "code": 0,
                  "message": "string"
                }
              }
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/ErrorModel"
            }
          },
          "multipart/form-data": {
            "schema": {
              "$ref": "#/components/schemas/ErrorModel"
            }
          }
        }
      }
    },
    "parameters": {
      "version": {
        "name": "version",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "version information"
      },
      "Content-Type": {
        "name": "Content-Type",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "application/json"
      }
    },
    "securitySchemes": {
      "API Key - 1": {
        "name": "API Key",
        "type": "apiKey",
        "in": "query",
        "description": "test Change"
      }
    }
  }
}